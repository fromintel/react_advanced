{
  "posts": [
    {
      "id": "1",
      "title": "json-server",
      "userId": "1"
    },
    {
      "id": "2",
      "title": "json-server",
      "userId": "2"
    }
  ],
  "articles": [
    {
      "id": "1",
      "title": "Getting To Know Angular Components",
      "subtitle": "",
      "img": "https://www.oditeksolutions.com/wp-content/uploads/2015/10/AngularJS-Framework-and-Features.png",
      "views": 245,
      "createdAt": "11.05.2023",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Title of this block",
          "paragraphs": [
            "Angular is one of the most popular front-end development frameworks out there. It is a leading choice for personal as well as industry-level development of web applications due to its robust capabilities. While Angular is popular for many different reasons, one of the main ones is its modular nature. Modularity makes it easy for the developer to keep track of all the different elements being used to program functionalities. It also helps in keeping consistency and even reusing a block of code or functionality multiple times.",
            "This modularity lies at the heart of Angular in the form of elements called components. This article will quickly take you through all the important bits to know about Angular components, their usage, how they are useful, and some code examples. Components make Angular easy to learn and applications easy to structure. Through this article, you’ll get to see how Angular components make all of this possible."
          ]
        },
        {
          "id": "2",
          "type": "TEXT",
          "title": "What Are Angular Components Exactly?",
          "paragraphs": [
            "Components lie at the foundation of Angular applications. They interact similar to how HTML elements do in terms of passing data between elements and emitting events. Each of the components has some behavior attached to it that tells what data to render or load and a template that tells it how to render the data. An Angular application is based on a component tree structure where different components have child components and so on. Data is shared from parent to child components through an ‘input binding.’ Similarly, it can be shared the other way around through outputs."
          ]
        },
        {
          "id": "3",
          "type": "IMAGE",
          "src": "https://hsto.org/r/w1560/getpro/habr/upload_files/728/924/f78/728924f789b71623ac6382bf38f87e0e.png",
          "title": "Angular component tree"
        },
        {
          "id": "4",
          "type": "TEXT",
          "title": "",
          "paragraphs": [
            "Components are the first elements to be rendered when bootstrapping and rendering an Angular application. Specifically, the App component is rendered and its child components alongside it. Throughout the user journey of the application, some components are being constantly removed while new ones are loaded and rendered. This continues on until the application is finally closed.",
            "Components are also very helpful in the automated testing of Angular applications. Due to how fundamental they are to the application, testing components is often the most crucial part of testing. The components can be tested using many different frameworks such as Jasmine, Karma, or even Angular’s own testing utilities. More complex components obviously require complex tests for quality assurance, so it is better to create smaller components that can be validated quickly and easily.Components are also very helpful in the automated testing of Angular applications. Due to how fundamental they are to the application, testing components is often the most crucial part of testing. The components can be tested using many different frameworks such as Jasmine, Karma, or even Angular’s own testing utilities. More complex components obviously require complex tests for quality assurance, so it is better to create smaller components that can be validated quickly and easily."
          ]
        },
        {
          "id": "5",
          "type": "CODE",
          "code": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n\tselector: 'example_app',\n\ttemplateUrl: './component.example.html',\n\tstyleUrls: ['./component.example.css']\n})\n\nexport class ExampleApp implements OnInit { \n  constructor() { }\n}"
        },
        {
          "id": "6",
          "type": "TEXT",
          "title": "",
          "paragraphs": [
            "Here, the selector part is telling how the component is to be associated with a certain HTML element in the application's template. The templateUrl basically gives the location for the component’s template HTML file. styleUrls gives the location of a CSS file for additional styling instructions, which works along with the component’s template."
          ]
        },
        {
          "id": "7",
          "type": "TEXT",
          "title": "How To Configure An Angular Component?",
          "paragraphs": [
            "Once an Angular component has been declared, it is provided with its main logic that defines its functionality. In the example below, you can see how the ExampleApp component is defining data, along with methods, that is further used by the template HTML file that is given below."
          ]
        },
        {
          "id": "8",
          "type": "CODE",
          "code": "<h1>{{ username }}</h1>\n<span>Change Name: </span><input [(ngModel)]=\"username\">\n<h3>Posts: {{ totalPosts }}</h3>\n<ul>\n<hr/>\n<div *ngFor=\"let post of posts; let i=index\">\n\t<button (click)=\"deletePost(i)\">DELETE</button>\n\t<h6>{{ post.title }}</h6>\n\t<p>{{ post.body }}</p>\n\t<hr/>\n</div>\n</ul>"
        },
        {
          "id": "9",
          "type": "TEXT",
          "title": "",
          "paragraphs": [
            "The data defined by the component is used by the HTML file in curly brackets. Alongside that, the deletePost method is bound with the DELETE button and is triggered every time it is pressed. Even the username can be changed through the input box generated by the HTML file."
          ]
        },
        {
          "id": "10",
          "type": "TEXT",
          "title": "Including Inputs In Component",
          "paragraphs": [
            "Inputs are a necessary part of a component tree structure and the Angular application in general. They can be implemented as shown in the following example."
          ]
        },
        {
          "id": "11",
          "type": "CODE",
          "code": "import { Component, Input } from '@angular/core';\n\n@Component({\n\tselector: 'example_app',\n\ttemplateUrl: './component.example.html',\n\tstyleUrls: ['./component.example.css']\n})\n\nexport class ExampleApp implements OnInit {\n\tconstructor() { }\n}\n\nexport class ExampleComponent2 {\n\t@Input() title: string = '';\n\t@Input() description: string = '';\n\t@Input('used') value: number = 0;\n\t@Input('available') max: number = 100;\n}\n"
        },
        {
          "id": "12",
          "type": "TEXT",
          "title": "",
          "paragraphs": [
            "ExampleComponent2 shows all the different data values that can be received from the parent component. If not passed, they are assigned their default values which are also defined in the component. @Input() helps specify that these variables can receive input and in the last two values, it also provides aliases inside the bracket. These aliases can be used in the HTML file and Angular would still direct them to these variables. @Output() works in a similar way and declares a variable to be a way to pass data to a parent component. The parent’s and child’s template files are then configured to forward and receive data through the specific variables."
          ]
        },
        {
          "id": "13",
          "type": "TEXT",
          "title": "Conclusion",
          "paragraphs": [
            "It is not possible to use Angular and its powerful abilities without understanding components and how to use them. Learning them and configuring them is the first step towards Angular proficiency. The functionality of components can be further added to through many different ways which help in building complex but innovative web applications. These include functions to observe if an event regarding a component’s lifecycle has occurred (creation, removal, or rendering) called lifecycle hooks. Or pipes that show the transformation of data on the template HTML file, like the TitleCasePipe that takes a string and changes it all to title case."
          ]
        }
      ]
    },
    {
      "id": "2",
      "title": "How to improve your skills in React",
      "subtitle": "",
      "img": "https://react.dev/images/og-home.png",
      "views": 257,
      "createdAt": "12.05.2023",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Title of this block",
          "paragraphs": [
            "Angular is one of the most popular front-end development frameworks out there. It is a leading choice for personal as well as industry-level development of web applications due to its robust capabilities. While Angular is popular for many different reasons, one of the main ones is its modular nature. Modularity makes it easy for the developer to keep track of all the different elements being used to program functionalities. It also helps in keeping consistency and even reusing a block of code or functionality multiple times.",
            "This modularity lies at the heart of Angular in the form of elements called components. This article will quickly take you through all the important bits to know about Angular components, their usage, how they are useful, and some code examples. Components make Angular easy to learn and applications easy to structure. Through this article, you’ll get to see how Angular components make all of this possible."
          ]
        },
        {
          "id": "2",
          "type": "TEXT",
          "title": "What Are Angular Components Exactly?",
          "paragraphs": [
            "Components lie at the foundation of Angular applications. They interact similar to how HTML elements do in terms of passing data between elements and emitting events. Each of the components has some behavior attached to it that tells what data to render or load and a template that tells it how to render the data. An Angular application is based on a component tree structure where different components have child components and so on. Data is shared from parent to child components through an ‘input binding.’ Similarly, it can be shared the other way around through outputs."
          ]
        },
        {
          "id": "3",
          "type": "IMAGE",
          "src": "https://hsto.org/r/w1560/getpro/habr/upload_files/728/924/f78/728924f789b71623ac6382bf38f87e0e.png",
          "title": "Angular component tree"
        },
        {
          "id": "4",
          "type": "TEXT",
          "title": "",
          "paragraphs": [
            "Components are the first elements to be rendered when bootstrapping and rendering an Angular application. Specifically, the App component is rendered and its child components alongside it. Throughout the user journey of the application, some components are being constantly removed while new ones are loaded and rendered. This continues on until the application is finally closed.",
            "Components are also very helpful in the automated testing of Angular applications. Due to how fundamental they are to the application, testing components is often the most crucial part of testing. The components can be tested using many different frameworks such as Jasmine, Karma, or even Angular’s own testing utilities. More complex components obviously require complex tests for quality assurance, so it is better to create smaller components that can be validated quickly and easily.Components are also very helpful in the automated testing of Angular applications. Due to how fundamental they are to the application, testing components is often the most crucial part of testing. The components can be tested using many different frameworks such as Jasmine, Karma, or even Angular’s own testing utilities. More complex components obviously require complex tests for quality assurance, so it is better to create smaller components that can be validated quickly and easily."
          ]
        },
        {
          "id": "5",
          "type": "CODE",
          "code": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n\tselector: 'example_app',\n\ttemplateUrl: './component.example.html',\n\tstyleUrls: ['./component.example.css']\n})\n\nexport class ExampleApp implements OnInit { \n  constructor() { }\n}"
        },
        {
          "id": "6",
          "type": "TEXT",
          "title": "",
          "paragraphs": [
            "Here, the selector part is telling how the component is to be associated with a certain HTML element in the application's template. The templateUrl basically gives the location for the component’s template HTML file. styleUrls gives the location of a CSS file for additional styling instructions, which works along with the component’s template."
          ]
        },
        {
          "id": "7",
          "type": "TEXT",
          "title": "How To Configure An Angular Component?",
          "paragraphs": [
            "Once an Angular component has been declared, it is provided with its main logic that defines its functionality. In the example below, you can see how the ExampleApp component is defining data, along with methods, that is further used by the template HTML file that is given below."
          ]
        },
        {
          "id": "8",
          "type": "CODE",
          "code": "<h1>{{ username }}</h1>\n<span>Change Name: </span><input [(ngModel)]=\"username\">\n<h3>Posts: {{ totalPosts }}</h3>\n<ul>\n<hr/>\n<div *ngFor=\"let post of posts; let i=index\">\n\t<button (click)=\"deletePost(i)\">DELETE</button>\n\t<h6>{{ post.title }}</h6>\n\t<p>{{ post.body }}</p>\n\t<hr/>\n</div>\n</ul>"
        },
        {
          "id": "9",
          "type": "TEXT",
          "title": "",
          "paragraphs": [
            "The data defined by the component is used by the HTML file in curly brackets. Alongside that, the deletePost method is bound with the DELETE button and is triggered every time it is pressed. Even the username can be changed through the input box generated by the HTML file."
          ]
        },
        {
          "id": "10",
          "type": "TEXT",
          "title": "Including Inputs In Component",
          "paragraphs": [
            "Inputs are a necessary part of a component tree structure and the Angular application in general. They can be implemented as shown in the following example."
          ]
        },
        {
          "id": "11",
          "type": "CODE",
          "code": "import { Component, Input } from '@angular/core';\n\n@Component({\n\tselector: 'example_app',\n\ttemplateUrl: './component.example.html',\n\tstyleUrls: ['./component.example.css']\n})\n\nexport class ExampleApp implements OnInit {\n\tconstructor() { }\n}\n\nexport class ExampleComponent2 {\n\t@Input() title: string = '';\n\t@Input() description: string = '';\n\t@Input('used') value: number = 0;\n\t@Input('available') max: number = 100;\n}\n"
        },
        {
          "id": "12",
          "type": "TEXT",
          "title": "",
          "paragraphs": [
            "ExampleComponent2 shows all the different data values that can be received from the parent component. If not passed, they are assigned their default values which are also defined in the component. @Input() helps specify that these variables can receive input and in the last two values, it also provides aliases inside the bracket. These aliases can be used in the HTML file and Angular would still direct them to these variables. @Output() works in a similar way and declares a variable to be a way to pass data to a parent component. The parent’s and child’s template files are then configured to forward and receive data through the specific variables."
          ]
        },
        {
          "id": "13",
          "type": "TEXT",
          "title": "Conclusion",
          "paragraphs": [
            "It is not possible to use Angular and its powerful abilities without understanding components and how to use them. Learning them and configuring them is the first step towards Angular proficiency. The functionality of components can be further added to through many different ways which help in building complex but innovative web applications. These include functions to observe if an event regarding a component’s lifecycle has occurred (creation, removal, or rendering) called lifecycle hooks. Or pipes that show the transformation of data on the template HTML file, like the TitleCasePipe that takes a string and changes it all to title case."
          ]
        }
      ]
    },
    {
      "id": "3",
      "title": "Vue is the best framework for CRM systems",
      "subtitle": "",
      "img": "https://thehotskills.com/wp-content/uploads/2021/09/Vuejs-Framework.jpg",
      "views": 356,
      "createdAt": "13.05.2023",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Title of this block",
          "paragraphs": [
            "Angular is one of the most popular front-end development frameworks out there. It is a leading choice for personal as well as industry-level development of web applications due to its robust capabilities. While Angular is popular for many different reasons, one of the main ones is its modular nature. Modularity makes it easy for the developer to keep track of all the different elements being used to program functionalities. It also helps in keeping consistency and even reusing a block of code or functionality multiple times.",
            "This modularity lies at the heart of Angular in the form of elements called components. This article will quickly take you through all the important bits to know about Angular components, their usage, how they are useful, and some code examples. Components make Angular easy to learn and applications easy to structure. Through this article, you’ll get to see how Angular components make all of this possible."
          ]
        },
        {
          "id": "2",
          "type": "TEXT",
          "title": "What Are Angular Components Exactly?",
          "paragraphs": [
            "Components lie at the foundation of Angular applications. They interact similar to how HTML elements do in terms of passing data between elements and emitting events. Each of the components has some behavior attached to it that tells what data to render or load and a template that tells it how to render the data. An Angular application is based on a component tree structure where different components have child components and so on. Data is shared from parent to child components through an ‘input binding.’ Similarly, it can be shared the other way around through outputs."
          ]
        },
        {
          "id": "3",
          "type": "IMAGE",
          "src": "https://hsto.org/r/w1560/getpro/habr/upload_files/728/924/f78/728924f789b71623ac6382bf38f87e0e.png",
          "title": "Angular component tree"
        },
        {
          "id": "4",
          "type": "TEXT",
          "title": "",
          "paragraphs": [
            "Components are the first elements to be rendered when bootstrapping and rendering an Angular application. Specifically, the App component is rendered and its child components alongside it. Throughout the user journey of the application, some components are being constantly removed while new ones are loaded and rendered. This continues on until the application is finally closed.",
            "Components are also very helpful in the automated testing of Angular applications. Due to how fundamental they are to the application, testing components is often the most crucial part of testing. The components can be tested using many different frameworks such as Jasmine, Karma, or even Angular’s own testing utilities. More complex components obviously require complex tests for quality assurance, so it is better to create smaller components that can be validated quickly and easily.Components are also very helpful in the automated testing of Angular applications. Due to how fundamental they are to the application, testing components is often the most crucial part of testing. The components can be tested using many different frameworks such as Jasmine, Karma, or even Angular’s own testing utilities. More complex components obviously require complex tests for quality assurance, so it is better to create smaller components that can be validated quickly and easily."
          ]
        },
        {
          "id": "5",
          "type": "CODE",
          "code": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n\tselector: 'example_app',\n\ttemplateUrl: './component.example.html',\n\tstyleUrls: ['./component.example.css']\n})\n\nexport class ExampleApp implements OnInit { \n  constructor() { }\n}"
        },
        {
          "id": "6",
          "type": "TEXT",
          "title": "",
          "paragraphs": [
            "Here, the selector part is telling how the component is to be associated with a certain HTML element in the application's template. The templateUrl basically gives the location for the component’s template HTML file. styleUrls gives the location of a CSS file for additional styling instructions, which works along with the component’s template."
          ]
        },
        {
          "id": "7",
          "type": "TEXT",
          "title": "How To Configure An Angular Component?",
          "paragraphs": [
            "Once an Angular component has been declared, it is provided with its main logic that defines its functionality. In the example below, you can see how the ExampleApp component is defining data, along with methods, that is further used by the template HTML file that is given below."
          ]
        },
        {
          "id": "8",
          "type": "CODE",
          "code": "<h1>{{ username }}</h1>\n<span>Change Name: </span><input [(ngModel)]=\"username\">\n<h3>Posts: {{ totalPosts }}</h3>\n<ul>\n<hr/>\n<div *ngFor=\"let post of posts; let i=index\">\n\t<button (click)=\"deletePost(i)\">DELETE</button>\n\t<h6>{{ post.title }}</h6>\n\t<p>{{ post.body }}</p>\n\t<hr/>\n</div>\n</ul>"
        },
        {
          "id": "9",
          "type": "TEXT",
          "title": "",
          "paragraphs": [
            "The data defined by the component is used by the HTML file in curly brackets. Alongside that, the deletePost method is bound with the DELETE button and is triggered every time it is pressed. Even the username can be changed through the input box generated by the HTML file."
          ]
        },
        {
          "id": "10",
          "type": "TEXT",
          "title": "Including Inputs In Component",
          "paragraphs": [
            "Inputs are a necessary part of a component tree structure and the Angular application in general. They can be implemented as shown in the following example."
          ]
        },
        {
          "id": "11",
          "type": "CODE",
          "code": "import { Component, Input } from '@angular/core';\n\n@Component({\n\tselector: 'example_app',\n\ttemplateUrl: './component.example.html',\n\tstyleUrls: ['./component.example.css']\n})\n\nexport class ExampleApp implements OnInit {\n\tconstructor() { }\n}\n\nexport class ExampleComponent2 {\n\t@Input() title: string = '';\n\t@Input() description: string = '';\n\t@Input('used') value: number = 0;\n\t@Input('available') max: number = 100;\n}\n"
        },
        {
          "id": "12",
          "type": "TEXT",
          "title": "",
          "paragraphs": [
            "ExampleComponent2 shows all the different data values that can be received from the parent component. If not passed, they are assigned their default values which are also defined in the component. @Input() helps specify that these variables can receive input and in the last two values, it also provides aliases inside the bracket. These aliases can be used in the HTML file and Angular would still direct them to these variables. @Output() works in a similar way and declares a variable to be a way to pass data to a parent component. The parent’s and child’s template files are then configured to forward and receive data through the specific variables."
          ]
        },
        {
          "id": "13",
          "type": "TEXT",
          "title": "Conclusion",
          "paragraphs": [
            "It is not possible to use Angular and its powerful abilities without understanding components and how to use them. Learning them and configuring them is the first step towards Angular proficiency. The functionality of components can be further added to through many different ways which help in building complex but innovative web applications. These include functions to observe if an event regarding a component’s lifecycle has occurred (creation, removal, or rendering) called lifecycle hooks. Or pipes that show the transformation of data on the template HTML file, like the TitleCasePipe that takes a string and changes it all to title case."
          ]
        }
      ]
    },
    {
      "id": "4",
      "title": "Another Article 4",
      "subtitle": "",
      "img": "https://thehotskills.com/wp-content/uploads/2021/09/Vuejs-Framework.jpg",
      "views": 356,
      "createdAt": "13.05.2023",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Title of this block",
          "paragraphs": [
            "Angular is one of the most popular front-end development frameworks out there. It is a leading choice for personal as well as industry-level development of web applications due to its robust capabilities. While Angular is popular for many different reasons, one of the main ones is its modular nature. Modularity makes it easy for the developer to keep track of all the different elements being used to program functionalities. It also helps in keeping consistency and even reusing a block of code or functionality multiple times.",
            "This modularity lies at the heart of Angular in the form of elements called components. This article will quickly take you through all the important bits to know about Angular components, their usage, how they are useful, and some code examples. Components make Angular easy to learn and applications easy to structure. Through this article, you’ll get to see how Angular components make all of this possible."
          ]
        }
      ]
    },
    {
      "id": "5",
      "title": "Another Article 5",
      "subtitle": "",
      "img": "https://thehotskills.com/wp-content/uploads/2021/09/Vuejs-Framework.jpg",
      "views": 356,
      "createdAt": "13.05.2023",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Title of this block",
          "paragraphs": [
            "Angular is one of the most popular front-end development frameworks out there. It is a leading choice for personal as well as industry-level development of web applications due to its robust capabilities. While Angular is popular for many different reasons, one of the main ones is its modular nature. Modularity makes it easy for the developer to keep track of all the different elements being used to program functionalities. It also helps in keeping consistency and even reusing a block of code or functionality multiple times.",
            "This modularity lies at the heart of Angular in the form of elements called components. This article will quickly take you through all the important bits to know about Angular components, their usage, how they are useful, and some code examples. Components make Angular easy to learn and applications easy to structure. Through this article, you’ll get to see how Angular components make all of this possible."
          ]
        }
      ]
    },
    {
      "id": "6",
      "title": "Another Article 6",
      "subtitle": "",
      "img": "https://thehotskills.com/wp-content/uploads/2021/09/Vuejs-Framework.jpg",
      "views": 356,
      "createdAt": "13.05.2023",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Title of this block",
          "paragraphs": [
            "Angular is one of the most popular front-end development frameworks out there. It is a leading choice for personal as well as industry-level development of web applications due to its robust capabilities. While Angular is popular for many different reasons, one of the main ones is its modular nature. Modularity makes it easy for the developer to keep track of all the different elements being used to program functionalities. It also helps in keeping consistency and even reusing a block of code or functionality multiple times.",
            "This modularity lies at the heart of Angular in the form of elements called components. This article will quickly take you through all the important bits to know about Angular components, their usage, how they are useful, and some code examples. Components make Angular easy to learn and applications easy to structure. Through this article, you’ll get to see how Angular components make all of this possible."
          ]
        }
      ]
    },
    {
      "id": "7",
      "title": "Another Article 7",
      "subtitle": "",
      "img": "https://thehotskills.com/wp-content/uploads/2021/09/Vuejs-Framework.jpg",
      "views": 356,
      "createdAt": "13.05.2023",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Title of this block",
          "paragraphs": [
            "Angular is one of the most popular front-end development frameworks out there. It is a leading choice for personal as well as industry-level development of web applications due to its robust capabilities. While Angular is popular for many different reasons, one of the main ones is its modular nature. Modularity makes it easy for the developer to keep track of all the different elements being used to program functionalities. It also helps in keeping consistency and even reusing a block of code or functionality multiple times.",
            "This modularity lies at the heart of Angular in the form of elements called components. This article will quickly take you through all the important bits to know about Angular components, their usage, how they are useful, and some code examples. Components make Angular easy to learn and applications easy to structure. Through this article, you’ll get to see how Angular components make all of this possible."
          ]
        }
      ]
    },
    {
      "id": "8",
      "title": "Another Article 8",
      "subtitle": "",
      "img": "https://thehotskills.com/wp-content/uploads/2021/09/Vuejs-Framework.jpg",
      "views": 356,
      "createdAt": "13.05.2023",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Title of this block",
          "paragraphs": [
            "Angular is one of the most popular front-end development frameworks out there. It is a leading choice for personal as well as industry-level development of web applications due to its robust capabilities. While Angular is popular for many different reasons, one of the main ones is its modular nature. Modularity makes it easy for the developer to keep track of all the different elements being used to program functionalities. It also helps in keeping consistency and even reusing a block of code or functionality multiple times.",
            "This modularity lies at the heart of Angular in the form of elements called components. This article will quickly take you through all the important bits to know about Angular components, their usage, how they are useful, and some code examples. Components make Angular easy to learn and applications easy to structure. Through this article, you’ll get to see how Angular components make all of this possible."
          ]
        }
      ]
    },
    {
      "id": "9",
      "title": "Another Article 9",
      "subtitle": "",
      "img": "https://thehotskills.com/wp-content/uploads/2021/09/Vuejs-Framework.jpg",
      "views": 356,
      "createdAt": "13.05.2023",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Title of this block",
          "paragraphs": [
            "Angular is one of the most popular front-end development frameworks out there. It is a leading choice for personal as well as industry-level development of web applications due to its robust capabilities. While Angular is popular for many different reasons, one of the main ones is its modular nature. Modularity makes it easy for the developer to keep track of all the different elements being used to program functionalities. It also helps in keeping consistency and even reusing a block of code or functionality multiple times.",
            "This modularity lies at the heart of Angular in the form of elements called components. This article will quickly take you through all the important bits to know about Angular components, their usage, how they are useful, and some code examples. Components make Angular easy to learn and applications easy to structure. Through this article, you’ll get to see how Angular components make all of this possible."
          ]
        }
      ]
    },
    {
      "id": "10",
      "title": "Another Article 10",
      "subtitle": "",
      "img": "https://thehotskills.com/wp-content/uploads/2021/09/Vuejs-Framework.jpg",
      "views": 356,
      "createdAt": "13.05.2023",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Title of this block",
          "paragraphs": [
            "Angular is one of the most popular front-end development frameworks out there. It is a leading choice for personal as well as industry-level development of web applications due to its robust capabilities. While Angular is popular for many different reasons, one of the main ones is its modular nature. Modularity makes it easy for the developer to keep track of all the different elements being used to program functionalities. It also helps in keeping consistency and even reusing a block of code or functionality multiple times.",
            "This modularity lies at the heart of Angular in the form of elements called components. This article will quickly take you through all the important bits to know about Angular components, their usage, how they are useful, and some code examples. Components make Angular easy to learn and applications easy to structure. Through this article, you’ll get to see how Angular components make all of this possible."
          ]
        }
      ]
    },
    {
      "id": "11",
      "title": "Another Article 11",
      "subtitle": "",
      "img": "https://thehotskills.com/wp-content/uploads/2021/09/Vuejs-Framework.jpg",
      "views": 356,
      "createdAt": "13.05.2023",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Title of this block",
          "paragraphs": [
            "Angular is one of the most popular front-end development frameworks out there. It is a leading choice for personal as well as industry-level development of web applications due to its robust capabilities. While Angular is popular for many different reasons, one of the main ones is its modular nature. Modularity makes it easy for the developer to keep track of all the different elements being used to program functionalities. It also helps in keeping consistency and even reusing a block of code or functionality multiple times.",
            "This modularity lies at the heart of Angular in the form of elements called components. This article will quickly take you through all the important bits to know about Angular components, their usage, how they are useful, and some code examples. Components make Angular easy to learn and applications easy to structure. Through this article, you’ll get to see how Angular components make all of this possible."
          ]
        }
      ]
    },
    {
      "id": "12",
      "title": "Another Article 12",
      "subtitle": "",
      "img": "https://thehotskills.com/wp-content/uploads/2021/09/Vuejs-Framework.jpg",
      "views": 356,
      "createdAt": "13.05.2023",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Title of this block",
          "paragraphs": [
            "Angular is one of the most popular front-end development frameworks out there. It is a leading choice for personal as well as industry-level development of web applications due to its robust capabilities. While Angular is popular for many different reasons, one of the main ones is its modular nature. Modularity makes it easy for the developer to keep track of all the different elements being used to program functionalities. It also helps in keeping consistency and even reusing a block of code or functionality multiple times.",
            "This modularity lies at the heart of Angular in the form of elements called components. This article will quickly take you through all the important bits to know about Angular components, their usage, how they are useful, and some code examples. Components make Angular easy to learn and applications easy to structure. Through this article, you’ll get to see how Angular components make all of this possible."
          ]
        }
      ]
    },
    {
      "id": "13",
      "title": "Another Article 13",
      "subtitle": "",
      "img": "https://thehotskills.com/wp-content/uploads/2021/09/Vuejs-Framework.jpg",
      "views": 356,
      "createdAt": "13.05.2023",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Title of this block",
          "paragraphs": [
            "Angular is one of the most popular front-end development frameworks out there. It is a leading choice for personal as well as industry-level development of web applications due to its robust capabilities. While Angular is popular for many different reasons, one of the main ones is its modular nature. Modularity makes it easy for the developer to keep track of all the different elements being used to program functionalities. It also helps in keeping consistency and even reusing a block of code or functionality multiple times.",
            "This modularity lies at the heart of Angular in the form of elements called components. This article will quickly take you through all the important bits to know about Angular components, their usage, how they are useful, and some code examples. Components make Angular easy to learn and applications easy to structure. Through this article, you’ll get to see how Angular components make all of this possible."
          ]
        }
      ]
    },
    {
      "id": "14",
      "title": "Another Article 14",
      "subtitle": "",
      "img": "https://thehotskills.com/wp-content/uploads/2021/09/Vuejs-Framework.jpg",
      "views": 356,
      "createdAt": "13.05.2023",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Title of this block",
          "paragraphs": [
            "Angular is one of the most popular front-end development frameworks out there. It is a leading choice for personal as well as industry-level development of web applications due to its robust capabilities. While Angular is popular for many different reasons, one of the main ones is its modular nature. Modularity makes it easy for the developer to keep track of all the different elements being used to program functionalities. It also helps in keeping consistency and even reusing a block of code or functionality multiple times.",
            "This modularity lies at the heart of Angular in the form of elements called components. This article will quickly take you through all the important bits to know about Angular components, their usage, how they are useful, and some code examples. Components make Angular easy to learn and applications easy to structure. Through this article, you’ll get to see how Angular components make all of this possible."
          ]
        }
      ]
    },
    {
      "id": "15",
      "title": "Another Article 14",
      "subtitle": "",
      "img": "https://thehotskills.com/wp-content/uploads/2021/09/Vuejs-Framework.jpg",
      "views": 356,
      "createdAt": "13.05.2023",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Title of this block",
          "paragraphs": [
            "Angular is one of the most popular front-end development frameworks out there. It is a leading choice for personal as well as industry-level development of web applications due to its robust capabilities. While Angular is popular for many different reasons, one of the main ones is its modular nature. Modularity makes it easy for the developer to keep track of all the different elements being used to program functionalities. It also helps in keeping consistency and even reusing a block of code or functionality multiple times.",
            "This modularity lies at the heart of Angular in the form of elements called components. This article will quickly take you through all the important bits to know about Angular components, their usage, how they are useful, and some code examples. Components make Angular easy to learn and applications easy to structure. Through this article, you’ll get to see how Angular components make all of this possible."
          ]
        }
      ]
    },
    {
      "id": "16",
      "title": "Another Article 16",
      "subtitle": "",
      "img": "https://thehotskills.com/wp-content/uploads/2021/09/Vuejs-Framework.jpg",
      "views": 356,
      "createdAt": "13.05.2023",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Title of this block",
          "paragraphs": [
            "Angular is one of the most popular front-end development frameworks out there. It is a leading choice for personal as well as industry-level development of web applications due to its robust capabilities. While Angular is popular for many different reasons, one of the main ones is its modular nature. Modularity makes it easy for the developer to keep track of all the different elements being used to program functionalities. It also helps in keeping consistency and even reusing a block of code or functionality multiple times.",
            "This modularity lies at the heart of Angular in the form of elements called components. This article will quickly take you through all the important bits to know about Angular components, their usage, how they are useful, and some code examples. Components make Angular easy to learn and applications easy to structure. Through this article, you’ll get to see how Angular components make all of this possible."
          ]
        }
      ]
    },
    {
      "id": "17",
      "title": "Another Article 17",
      "subtitle": "",
      "img": "https://thehotskills.com/wp-content/uploads/2021/09/Vuejs-Framework.jpg",
      "views": 356,
      "createdAt": "13.05.2023",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Title of this block",
          "paragraphs": [
            "Angular is one of the most popular front-end development frameworks out there. It is a leading choice for personal as well as industry-level development of web applications due to its robust capabilities. While Angular is popular for many different reasons, one of the main ones is its modular nature. Modularity makes it easy for the developer to keep track of all the different elements being used to program functionalities. It also helps in keeping consistency and even reusing a block of code or functionality multiple times.",
            "This modularity lies at the heart of Angular in the form of elements called components. This article will quickly take you through all the important bits to know about Angular components, their usage, how they are useful, and some code examples. Components make Angular easy to learn and applications easy to structure. Through this article, you’ll get to see how Angular components make all of this possible."
          ]
        }
      ]
    },
    {
      "id": "18",
      "title": "Another Article 18",
      "subtitle": "",
      "img": "https://thehotskills.com/wp-content/uploads/2021/09/Vuejs-Framework.jpg",
      "views": 356,
      "createdAt": "13.05.2023",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Title of this block",
          "paragraphs": [
            "Angular is one of the most popular front-end development frameworks out there. It is a leading choice for personal as well as industry-level development of web applications due to its robust capabilities. While Angular is popular for many different reasons, one of the main ones is its modular nature. Modularity makes it easy for the developer to keep track of all the different elements being used to program functionalities. It also helps in keeping consistency and even reusing a block of code or functionality multiple times.",
            "This modularity lies at the heart of Angular in the form of elements called components. This article will quickly take you through all the important bits to know about Angular components, their usage, how they are useful, and some code examples. Components make Angular easy to learn and applications easy to structure. Through this article, you’ll get to see how Angular components make all of this possible."
          ]
        }
      ]
    },
    {
      "id": "19",
      "title": "Another Article 19",
      "subtitle": "",
      "img": "https://thehotskills.com/wp-content/uploads/2021/09/Vuejs-Framework.jpg",
      "views": 356,
      "createdAt": "13.05.2023",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Title of this block",
          "paragraphs": [
            "Angular is one of the most popular front-end development frameworks out there. It is a leading choice for personal as well as industry-level development of web applications due to its robust capabilities. While Angular is popular for many different reasons, one of the main ones is its modular nature. Modularity makes it easy for the developer to keep track of all the different elements being used to program functionalities. It also helps in keeping consistency and even reusing a block of code or functionality multiple times.",
            "This modularity lies at the heart of Angular in the form of elements called components. This article will quickly take you through all the important bits to know about Angular components, their usage, how they are useful, and some code examples. Components make Angular easy to learn and applications easy to structure. Through this article, you’ll get to see how Angular components make all of this possible."
          ]
        }
      ]
    },
    {
      "id": "20",
      "title": "Another Article 20",
      "subtitle": "",
      "img": "https://thehotskills.com/wp-content/uploads/2021/09/Vuejs-Framework.jpg",
      "views": 356,
      "createdAt": "13.05.2023",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Title of this block",
          "paragraphs": [
            "Angular is one of the most popular front-end development frameworks out there. It is a leading choice for personal as well as industry-level development of web applications due to its robust capabilities. While Angular is popular for many different reasons, one of the main ones is its modular nature. Modularity makes it easy for the developer to keep track of all the different elements being used to program functionalities. It also helps in keeping consistency and even reusing a block of code or functionality multiple times.",
            "This modularity lies at the heart of Angular in the form of elements called components. This article will quickly take you through all the important bits to know about Angular components, their usage, how they are useful, and some code examples. Components make Angular easy to learn and applications easy to structure. Through this article, you’ll get to see how Angular components make all of this possible."
          ]
        }
      ]
    },
    {
      "id": "21",
      "title": "Another Article 21",
      "subtitle": "",
      "img": "https://thehotskills.com/wp-content/uploads/2021/09/Vuejs-Framework.jpg",
      "views": 356,
      "createdAt": "13.05.2023",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Title of this block",
          "paragraphs": [
            "Angular is one of the most popular front-end development frameworks out there. It is a leading choice for personal as well as industry-level development of web applications due to its robust capabilities. While Angular is popular for many different reasons, one of the main ones is its modular nature. Modularity makes it easy for the developer to keep track of all the different elements being used to program functionalities. It also helps in keeping consistency and even reusing a block of code or functionality multiple times.",
            "This modularity lies at the heart of Angular in the form of elements called components. This article will quickly take you through all the important bits to know about Angular components, their usage, how they are useful, and some code examples. Components make Angular easy to learn and applications easy to structure. Through this article, you’ll get to see how Angular components make all of this possible."
          ]
        }
      ]
    },
    {
      "id": "22",
      "title": "Another Article 22",
      "subtitle": "",
      "img": "https://thehotskills.com/wp-content/uploads/2021/09/Vuejs-Framework.jpg",
      "views": 356,
      "createdAt": "13.05.2023",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Title of this block",
          "paragraphs": [
            "Angular is one of the most popular front-end development frameworks out there. It is a leading choice for personal as well as industry-level development of web applications due to its robust capabilities. While Angular is popular for many different reasons, one of the main ones is its modular nature. Modularity makes it easy for the developer to keep track of all the different elements being used to program functionalities. It also helps in keeping consistency and even reusing a block of code or functionality multiple times.",
            "This modularity lies at the heart of Angular in the form of elements called components. This article will quickly take you through all the important bits to know about Angular components, their usage, how they are useful, and some code examples. Components make Angular easy to learn and applications easy to structure. Through this article, you’ll get to see how Angular components make all of this possible."
          ]
        }
      ]
    },
    {
      "id": "23",
      "title": "Another Article 23",
      "subtitle": "",
      "img": "https://thehotskills.com/wp-content/uploads/2021/09/Vuejs-Framework.jpg",
      "views": 356,
      "createdAt": "13.05.2023",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Title of this block",
          "paragraphs": [
            "Angular is one of the most popular front-end development frameworks out there. It is a leading choice for personal as well as industry-level development of web applications due to its robust capabilities. While Angular is popular for many different reasons, one of the main ones is its modular nature. Modularity makes it easy for the developer to keep track of all the different elements being used to program functionalities. It also helps in keeping consistency and even reusing a block of code or functionality multiple times.",
            "This modularity lies at the heart of Angular in the form of elements called components. This article will quickly take you through all the important bits to know about Angular components, their usage, how they are useful, and some code examples. Components make Angular easy to learn and applications easy to structure. Through this article, you’ll get to see how Angular components make all of this possible."
          ]
        }
      ]
    },
    {
      "id": "24",
      "title": "Another Article 24",
      "subtitle": "",
      "img": "https://thehotskills.com/wp-content/uploads/2021/09/Vuejs-Framework.jpg",
      "views": 356,
      "createdAt": "13.05.2023",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Title of this block",
          "paragraphs": [
            "Angular is one of the most popular front-end development frameworks out there. It is a leading choice for personal as well as industry-level development of web applications due to its robust capabilities. While Angular is popular for many different reasons, one of the main ones is its modular nature. Modularity makes it easy for the developer to keep track of all the different elements being used to program functionalities. It also helps in keeping consistency and even reusing a block of code or functionality multiple times.",
            "This modularity lies at the heart of Angular in the form of elements called components. This article will quickly take you through all the important bits to know about Angular components, their usage, how they are useful, and some code examples. Components make Angular easy to learn and applications easy to structure. Through this article, you’ll get to see how Angular components make all of this possible."
          ]
        }
      ]
    },
    {
      "id": "25",
      "title": "Another Article 25",
      "subtitle": "",
      "img": "https://thehotskills.com/wp-content/uploads/2021/09/Vuejs-Framework.jpg",
      "views": 356,
      "createdAt": "13.05.2023",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Title of this block",
          "paragraphs": [
            "Angular is one of the most popular front-end development frameworks out there. It is a leading choice for personal as well as industry-level development of web applications due to its robust capabilities. While Angular is popular for many different reasons, one of the main ones is its modular nature. Modularity makes it easy for the developer to keep track of all the different elements being used to program functionalities. It also helps in keeping consistency and even reusing a block of code or functionality multiple times.",
            "This modularity lies at the heart of Angular in the form of elements called components. This article will quickly take you through all the important bits to know about Angular components, their usage, how they are useful, and some code examples. Components make Angular easy to learn and applications easy to structure. Through this article, you’ll get to see how Angular components make all of this possible."
          ]
        }
      ]
    },
    {
      "id": "26",
      "title": "Another Article 26",
      "subtitle": "",
      "img": "https://thehotskills.com/wp-content/uploads/2021/09/Vuejs-Framework.jpg",
      "views": 356,
      "createdAt": "13.05.2023",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Title of this block",
          "paragraphs": [
            "Angular is one of the most popular front-end development frameworks out there. It is a leading choice for personal as well as industry-level development of web applications due to its robust capabilities. While Angular is popular for many different reasons, one of the main ones is its modular nature. Modularity makes it easy for the developer to keep track of all the different elements being used to program functionalities. It also helps in keeping consistency and even reusing a block of code or functionality multiple times.",
            "This modularity lies at the heart of Angular in the form of elements called components. This article will quickly take you through all the important bits to know about Angular components, their usage, how they are useful, and some code examples. Components make Angular easy to learn and applications easy to structure. Through this article, you’ll get to see how Angular components make all of this possible."
          ]
        }
      ]
    },
    {
      "id": "27",
      "title": "Another Article 27",
      "subtitle": "",
      "img": "https://thehotskills.com/wp-content/uploads/2021/09/Vuejs-Framework.jpg",
      "views": 356,
      "createdAt": "13.05.2023",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Title of this block",
          "paragraphs": [
            "Angular is one of the most popular front-end development frameworks out there. It is a leading choice for personal as well as industry-level development of web applications due to its robust capabilities. While Angular is popular for many different reasons, one of the main ones is its modular nature. Modularity makes it easy for the developer to keep track of all the different elements being used to program functionalities. It also helps in keeping consistency and even reusing a block of code or functionality multiple times.",
            "This modularity lies at the heart of Angular in the form of elements called components. This article will quickly take you through all the important bits to know about Angular components, their usage, how they are useful, and some code examples. Components make Angular easy to learn and applications easy to structure. Through this article, you’ll get to see how Angular components make all of this possible."
          ]
        }
      ]
    },
    {
      "id": "28",
      "title": "Another Article 28",
      "subtitle": "",
      "img": "https://thehotskills.com/wp-content/uploads/2021/09/Vuejs-Framework.jpg",
      "views": 356,
      "createdAt": "13.05.2023",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Title of this block",
          "paragraphs": [
            "Angular is one of the most popular front-end development frameworks out there. It is a leading choice for personal as well as industry-level development of web applications due to its robust capabilities. While Angular is popular for many different reasons, one of the main ones is its modular nature. Modularity makes it easy for the developer to keep track of all the different elements being used to program functionalities. It also helps in keeping consistency and even reusing a block of code or functionality multiple times.",
            "This modularity lies at the heart of Angular in the form of elements called components. This article will quickly take you through all the important bits to know about Angular components, their usage, how they are useful, and some code examples. Components make Angular easy to learn and applications easy to structure. Through this article, you’ll get to see how Angular components make all of this possible."
          ]
        }
      ]
    },
    {
      "id": "29",
      "title": "Another Article 29",
      "subtitle": "",
      "img": "https://thehotskills.com/wp-content/uploads/2021/09/Vuejs-Framework.jpg",
      "views": 356,
      "createdAt": "13.05.2023",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Title of this block",
          "paragraphs": [
            "Angular is one of the most popular front-end development frameworks out there. It is a leading choice for personal as well as industry-level development of web applications due to its robust capabilities. While Angular is popular for many different reasons, one of the main ones is its modular nature. Modularity makes it easy for the developer to keep track of all the different elements being used to program functionalities. It also helps in keeping consistency and even reusing a block of code or functionality multiple times.",
            "This modularity lies at the heart of Angular in the form of elements called components. This article will quickly take you through all the important bits to know about Angular components, their usage, how they are useful, and some code examples. Components make Angular easy to learn and applications easy to structure. Through this article, you’ll get to see how Angular components make all of this possible."
          ]
        }
      ]
    },
    {
      "id": "30",
      "title": "Another Article 30",
      "subtitle": "",
      "img": "https://thehotskills.com/wp-content/uploads/2021/09/Vuejs-Framework.jpg",
      "views": 356,
      "createdAt": "13.05.2023",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Title of this block",
          "paragraphs": [
            "Angular is one of the most popular front-end development frameworks out there. It is a leading choice for personal as well as industry-level development of web applications due to its robust capabilities. While Angular is popular for many different reasons, one of the main ones is its modular nature. Modularity makes it easy for the developer to keep track of all the different elements being used to program functionalities. It also helps in keeping consistency and even reusing a block of code or functionality multiple times.",
            "This modularity lies at the heart of Angular in the form of elements called components. This article will quickly take you through all the important bits to know about Angular components, their usage, how they are useful, and some code examples. Components make Angular easy to learn and applications easy to structure. Through this article, you’ll get to see how Angular components make all of this possible."
          ]
        }
      ]
    },
    {
      "id": "31",
      "title": "Another Article 31",
      "subtitle": "",
      "img": "https://thehotskills.com/wp-content/uploads/2021/09/Vuejs-Framework.jpg",
      "views": 356,
      "createdAt": "13.05.2023",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Title of this block",
          "paragraphs": [
            "Angular is one of the most popular front-end development frameworks out there. It is a leading choice for personal as well as industry-level development of web applications due to its robust capabilities. While Angular is popular for many different reasons, one of the main ones is its modular nature. Modularity makes it easy for the developer to keep track of all the different elements being used to program functionalities. It also helps in keeping consistency and even reusing a block of code or functionality multiple times.",
            "This modularity lies at the heart of Angular in the form of elements called components. This article will quickly take you through all the important bits to know about Angular components, their usage, how they are useful, and some code examples. Components make Angular easy to learn and applications easy to structure. Through this article, you’ll get to see how Angular components make all of this possible."
          ]
        }
      ]
    },
    {
      "id": "32",
      "title": "Another Article 32",
      "subtitle": "",
      "img": "https://thehotskills.com/wp-content/uploads/2021/09/Vuejs-Framework.jpg",
      "views": 356,
      "createdAt": "13.05.2023",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Title of this block",
          "paragraphs": [
            "Angular is one of the most popular front-end development frameworks out there. It is a leading choice for personal as well as industry-level development of web applications due to its robust capabilities. While Angular is popular for many different reasons, one of the main ones is its modular nature. Modularity makes it easy for the developer to keep track of all the different elements being used to program functionalities. It also helps in keeping consistency and even reusing a block of code or functionality multiple times.",
            "This modularity lies at the heart of Angular in the form of elements called components. This article will quickly take you through all the important bits to know about Angular components, their usage, how they are useful, and some code examples. Components make Angular easy to learn and applications easy to structure. Through this article, you’ll get to see how Angular components make all of this possible."
          ]
        }
      ]
    },
    {
      "id": "33",
      "title": "Another Article 33",
      "subtitle": "",
      "img": "https://thehotskills.com/wp-content/uploads/2021/09/Vuejs-Framework.jpg",
      "views": 356,
      "createdAt": "13.05.2023",
      "userId": "1",
      "type": [
        "IT"
      ],
      "blocks": [
        {
          "id": "1",
          "type": "TEXT",
          "title": "Title of this block",
          "paragraphs": [
            "Angular is one of the most popular front-end development frameworks out there. It is a leading choice for personal as well as industry-level development of web applications due to its robust capabilities. While Angular is popular for many different reasons, one of the main ones is its modular nature. Modularity makes it easy for the developer to keep track of all the different elements being used to program functionalities. It also helps in keeping consistency and even reusing a block of code or functionality multiple times.",
            "This modularity lies at the heart of Angular in the form of elements called components. This article will quickly take you through all the important bits to know about Angular components, their usage, how they are useful, and some code examples. Components make Angular easy to learn and applications easy to structure. Through this article, you’ll get to see how Angular components make all of this possible."
          ]
        }
      ]
    }
  ],
  "comments": [
    {
      "id": "1",
      "text": "some comment",
      "postId": "1",
      "articleId": "1",
      "userId": "1"
    },
    {
      "id": "2",
      "text": "some comment 2",
      "postId": "1",
      "articleId": "1",
      "userId": "1"
    },
    {
      "id": "3",
      "text": "some comment 3",
      "postId": "1",
      "articleId": "1",
      "userId": "1"
    },
    {
      "articleId": "1",
      "userId": "1",
      "text": "test 1",
      "id": "VgE5RVc"
    },
    {
      "articleId": "2",
      "userId": "1",
      "text": "test 2",
      "id": "FVu0R0R"
    },
    {
      "articleId": "2",
      "userId": "1",
      "text": "test 3",
      "id": "IeqiMhB"
    },
    {
      "articleId": "3",
      "userId": "1",
      "text": "test 4",
      "id": "fBuarq-"
    }
  ],
  "users": [
    {
      "id": "1",
      "username": "admin",
      "password": "123",
      "role": "ADMIN",
      "avatar": "https://e7.pngegg.com/pngimages/799/987/png-clipart-computer-icons-avatar-icon-design-avatar-heroes-computer-wallpaper.png"
    },
    {
      "id": "2",
      "username": "user",
      "password": "123",
      "role": "USER",
      "avatar": "https://img.freepik.com/premium-vector/mans-head-avatar-vector_83738-354.jpg"
    }
  ],
  "profile": [
    {
      "id": "1",
      "firstname": "Anton",
      "lastname": "Zolotukhin",
      "age": 27,
      "country": "Germany",
      "city": "Hannover",
      "currency": "EUR",
      "username": "zoltan",
      "avatar": "https://e7.pngegg.com/pngimages/799/987/png-clipart-computer-icons-avatar-icon-design-avatar-heroes-computer-wallpaper.png"
    },
    {
      "id": "2",
      "firstname": "John",
      "lastname": "Marston",
      "age": 35,
      "country": "Spain",
      "city": "Barcelona",
      "currency": "EUR",
      "username": "jmarst",
      "avatar": "https://img.freepik.com/premium-vector/mans-head-avatar-vector_83738-354.jpg"
    }
  ]
}